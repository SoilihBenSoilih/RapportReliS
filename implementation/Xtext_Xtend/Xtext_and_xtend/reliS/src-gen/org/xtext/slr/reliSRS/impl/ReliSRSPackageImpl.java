/**
 * generated by Xtext 2.14.0
 */
package org.xtext.slr.reliSRS.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.slr.reliSRS.CDecision;
import org.xtext.slr.reliSRS.Classification;
import org.xtext.slr.reliSRS.ConflictResolution;
import org.xtext.slr.reliSRS.DecisionPerUser;
import org.xtext.slr.reliSRS.Model;
import org.xtext.slr.reliSRS.Participants;
import org.xtext.slr.reliSRS.Phases;
import org.xtext.slr.reliSRS.RDecision;
import org.xtext.slr.reliSRS.ReliSRSFactory;
import org.xtext.slr.reliSRS.ReliSRSPackage;
import org.xtext.slr.reliSRS.Result;
import org.xtext.slr.reliSRS.StatisticsOnExclusionCriteria;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ReliSRSPackageImpl extends EPackageImpl implements ReliSRSPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass participantsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass classificationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass phasesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass decisionPerUserEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statisticsOnExclusionCriteriaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conflictResolutionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass resultEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum cDecisionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum rDecisionEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.slr.reliSRS.ReliSRSPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private ReliSRSPackageImpl()
  {
    super(eNS_URI, ReliSRSFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link ReliSRSPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static ReliSRSPackage init()
  {
    if (isInited) return (ReliSRSPackage)EPackage.Registry.INSTANCE.getEPackage(ReliSRSPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredReliSRSPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    ReliSRSPackageImpl theReliSRSPackage = registeredReliSRSPackage instanceof ReliSRSPackageImpl ? (ReliSRSPackageImpl)registeredReliSRSPackage : new ReliSRSPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theReliSRSPackage.createPackageContents();

    // Initialize created meta-data
    theReliSRSPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theReliSRSPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(ReliSRSPackage.eNS_URI, theReliSRSPackage);
    return theReliSRSPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getModel_ProjectName()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Participants()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Phase()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Classification()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParticipants()
  {
    return participantsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParticipants_Participant()
  {
    return (EAttribute)participantsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParticipants_Role()
  {
    return (EAttribute)participantsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getClassification()
  {
    return classificationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClassification_Question()
  {
    return (EAttribute)classificationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClassification_Response()
  {
    return (EAttribute)classificationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClassification_Resultat()
  {
    return (EAttribute)classificationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPhases()
  {
    return phasesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPhases_PhaseName()
  {
    return (EAttribute)phasesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPhases_DecisionPerUser()
  {
    return (EReference)phasesEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPhases_StatisticsOnExclusionCriteria()
  {
    return (EReference)phasesEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPhases_ConflictResolution()
  {
    return (EReference)phasesEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPhases_Result()
  {
    return (EReference)phasesEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDecisionPerUser()
  {
    return decisionPerUserEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDecisionPerUser_DUser()
  {
    return (EAttribute)decisionPerUserEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDecisionPerUser_DIncluded()
  {
    return (EAttribute)decisionPerUserEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDecisionPerUser_DExcluded()
  {
    return (EAttribute)decisionPerUserEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDecisionPerUser_DInConflict()
  {
    return (EAttribute)decisionPerUserEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStatisticsOnExclusionCriteria()
  {
    return statisticsOnExclusionCriteriaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStatisticsOnExclusionCriteria_SCriteria()
  {
    return (EAttribute)statisticsOnExclusionCriteriaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStatisticsOnExclusionCriteria_SNombre()
  {
    return (EAttribute)statisticsOnExclusionCriteriaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStatisticsOnExclusionCriteria_SPourcentage()
  {
    return (EAttribute)statisticsOnExclusionCriteriaEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConflictResolution()
  {
    return conflictResolutionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConflictResolution_CDecision()
  {
    return (EAttribute)conflictResolutionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConflictResolution_CNombre()
  {
    return (EAttribute)conflictResolutionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getResult()
  {
    return resultEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getResult_RTotal()
  {
    return (EAttribute)resultEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getResult_RDecision()
  {
    return (EAttribute)resultEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getResult_RPaper()
  {
    return (EAttribute)resultEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getResult_RPourcentage()
  {
    return (EAttribute)resultEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getCDecision()
  {
    return cDecisionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getRDecision()
  {
    return rDecisionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReliSRSFactory getReliSRSFactory()
  {
    return (ReliSRSFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEAttribute(modelEClass, MODEL__PROJECT_NAME);
    createEReference(modelEClass, MODEL__PARTICIPANTS);
    createEReference(modelEClass, MODEL__PHASE);
    createEReference(modelEClass, MODEL__CLASSIFICATION);

    participantsEClass = createEClass(PARTICIPANTS);
    createEAttribute(participantsEClass, PARTICIPANTS__PARTICIPANT);
    createEAttribute(participantsEClass, PARTICIPANTS__ROLE);

    classificationEClass = createEClass(CLASSIFICATION);
    createEAttribute(classificationEClass, CLASSIFICATION__QUESTION);
    createEAttribute(classificationEClass, CLASSIFICATION__RESPONSE);
    createEAttribute(classificationEClass, CLASSIFICATION__RESULTAT);

    phasesEClass = createEClass(PHASES);
    createEAttribute(phasesEClass, PHASES__PHASE_NAME);
    createEReference(phasesEClass, PHASES__DECISION_PER_USER);
    createEReference(phasesEClass, PHASES__STATISTICS_ON_EXCLUSION_CRITERIA);
    createEReference(phasesEClass, PHASES__CONFLICT_RESOLUTION);
    createEReference(phasesEClass, PHASES__RESULT);

    decisionPerUserEClass = createEClass(DECISION_PER_USER);
    createEAttribute(decisionPerUserEClass, DECISION_PER_USER__DUSER);
    createEAttribute(decisionPerUserEClass, DECISION_PER_USER__DINCLUDED);
    createEAttribute(decisionPerUserEClass, DECISION_PER_USER__DEXCLUDED);
    createEAttribute(decisionPerUserEClass, DECISION_PER_USER__DIN_CONFLICT);

    statisticsOnExclusionCriteriaEClass = createEClass(STATISTICS_ON_EXCLUSION_CRITERIA);
    createEAttribute(statisticsOnExclusionCriteriaEClass, STATISTICS_ON_EXCLUSION_CRITERIA__SCRITERIA);
    createEAttribute(statisticsOnExclusionCriteriaEClass, STATISTICS_ON_EXCLUSION_CRITERIA__SNOMBRE);
    createEAttribute(statisticsOnExclusionCriteriaEClass, STATISTICS_ON_EXCLUSION_CRITERIA__SPOURCENTAGE);

    conflictResolutionEClass = createEClass(CONFLICT_RESOLUTION);
    createEAttribute(conflictResolutionEClass, CONFLICT_RESOLUTION__CDECISION);
    createEAttribute(conflictResolutionEClass, CONFLICT_RESOLUTION__CNOMBRE);

    resultEClass = createEClass(RESULT);
    createEAttribute(resultEClass, RESULT__RTOTAL);
    createEAttribute(resultEClass, RESULT__RDECISION);
    createEAttribute(resultEClass, RESULT__RPAPER);
    createEAttribute(resultEClass, RESULT__RPOURCENTAGE);

    // Create enums
    cDecisionEEnum = createEEnum(CDECISION);
    rDecisionEEnum = createEEnum(RDECISION);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getModel_ProjectName(), ecorePackage.getEString(), "projectName", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Participants(), this.getParticipants(), null, "participants", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Phase(), this.getPhases(), null, "phase", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Classification(), this.getClassification(), null, "classification", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(participantsEClass, Participants.class, "Participants", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getParticipants_Participant(), ecorePackage.getEString(), "participant", null, 0, -1, Participants.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParticipants_Role(), ecorePackage.getEString(), "role", null, 0, -1, Participants.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(classificationEClass, Classification.class, "Classification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getClassification_Question(), ecorePackage.getEString(), "question", null, 0, -1, Classification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getClassification_Response(), ecorePackage.getEString(), "response", null, 0, -1, Classification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getClassification_Resultat(), ecorePackage.getEString(), "resultat", null, 0, -1, Classification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(phasesEClass, Phases.class, "Phases", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPhases_PhaseName(), ecorePackage.getEString(), "phaseName", null, 0, 1, Phases.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPhases_DecisionPerUser(), this.getDecisionPerUser(), null, "decisionPerUser", null, 0, 1, Phases.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPhases_StatisticsOnExclusionCriteria(), this.getStatisticsOnExclusionCriteria(), null, "statisticsOnExclusionCriteria", null, 0, 1, Phases.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPhases_ConflictResolution(), this.getConflictResolution(), null, "conflictResolution", null, 0, 1, Phases.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPhases_Result(), this.getResult(), null, "result", null, 0, 1, Phases.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(decisionPerUserEClass, DecisionPerUser.class, "DecisionPerUser", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDecisionPerUser_DUser(), ecorePackage.getEString(), "dUser", null, 0, -1, DecisionPerUser.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDecisionPerUser_DIncluded(), ecorePackage.getEString(), "dIncluded", null, 0, -1, DecisionPerUser.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDecisionPerUser_DExcluded(), ecorePackage.getEString(), "dExcluded", null, 0, -1, DecisionPerUser.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDecisionPerUser_DInConflict(), ecorePackage.getEString(), "dInConflict", null, 0, -1, DecisionPerUser.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statisticsOnExclusionCriteriaEClass, StatisticsOnExclusionCriteria.class, "StatisticsOnExclusionCriteria", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStatisticsOnExclusionCriteria_SCriteria(), ecorePackage.getEString(), "sCriteria", null, 0, -1, StatisticsOnExclusionCriteria.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStatisticsOnExclusionCriteria_SNombre(), ecorePackage.getEString(), "sNombre", null, 0, -1, StatisticsOnExclusionCriteria.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStatisticsOnExclusionCriteria_SPourcentage(), ecorePackage.getEString(), "sPourcentage", null, 0, -1, StatisticsOnExclusionCriteria.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conflictResolutionEClass, ConflictResolution.class, "ConflictResolution", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConflictResolution_CDecision(), this.getCDecision(), "cDecision", null, 0, -1, ConflictResolution.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConflictResolution_CNombre(), ecorePackage.getEString(), "cNombre", null, 0, -1, ConflictResolution.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(resultEClass, Result.class, "Result", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getResult_RTotal(), ecorePackage.getEString(), "rTotal", null, 0, 1, Result.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getResult_RDecision(), this.getRDecision(), "rDecision", null, 0, -1, Result.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getResult_RPaper(), ecorePackage.getEString(), "rPaper", null, 0, -1, Result.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getResult_RPourcentage(), ecorePackage.getEString(), "rPourcentage", null, 0, -1, Result.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(cDecisionEEnum, CDecision.class, "CDecision");
    addEEnumLiteral(cDecisionEEnum, CDecision.CRESOLVED_INCLUDED);
    addEEnumLiteral(cDecisionEEnum, CDecision.CRESOLVED_EXCLUDED);
    addEEnumLiteral(cDecisionEEnum, CDecision.CPENDING_CONFLICT);

    initEEnum(rDecisionEEnum, RDecision.class, "RDecision");
    addEEnumLiteral(rDecisionEEnum, RDecision.RINCLUDED);
    addEEnumLiteral(rDecisionEEnum, RDecision.REXCLUDED);
    addEEnumLiteral(rDecisionEEnum, RDecision.RIN_CONFLICT);
    addEEnumLiteral(rDecisionEEnum, RDecision.RIN_REVIEW);
    addEEnumLiteral(rDecisionEEnum, RDecision.RPENDING);

    // Create resource
    createResource(eNS_URI);
  }

} //ReliSRSPackageImpl
