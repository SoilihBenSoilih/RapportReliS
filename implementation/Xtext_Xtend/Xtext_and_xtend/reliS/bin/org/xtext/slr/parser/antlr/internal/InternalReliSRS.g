/*
 * generated by Xtext 2.14.0
 */
grammar InternalReliSRS;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.slr.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.slr.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.slr.services.ReliSRSGrammarAccess;

}

@parser::members {

 	private ReliSRSGrammarAccess grammarAccess;

    public InternalReliSRSParser(TokenStream input, ReliSRSGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected ReliSRSGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ProjectName:'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getProjectNameKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getProjectNameProjectNameParserRuleCall_1_0());
				}
				lv_projectName_1_0=ruleProjectName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"projectName",
						lv_projectName_1_0,
						"org.xtext.slr.ReliSRS.ProjectName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='Participants:'
			{
				newLeafNode(otherlv_2, grammarAccess.getModelAccess().getParticipantsKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getParticipantsParticipantsParserRuleCall_2_1_0());
					}
					lv_participants_3_0=ruleParticipants
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						set(
							$current,
							"participants",
							lv_participants_3_0,
							"org.xtext.slr.ReliSRS.Participants");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_4='Phase:'
			{
				newLeafNode(otherlv_4, grammarAccess.getModelAccess().getPhaseKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getPhasePhasesParserRuleCall_3_1_0());
					}
					lv_phase_5_0=rulePhases
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"phase",
							lv_phase_5_0,
							"org.xtext.slr.ReliSRS.Phases");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)*
		(
			otherlv_6='Classification:'
			{
				newLeafNode(otherlv_6, grammarAccess.getModelAccess().getClassificationKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getClassificationClassificationParserRuleCall_4_1_0());
					}
					lv_classification_7_0=ruleClassification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						set(
							$current,
							"classification",
							lv_classification_7_0,
							"org.xtext.slr.ReliSRS.Classification");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleProjectName
entryRuleProjectName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getProjectNameRule()); }
	iv_ruleProjectName=ruleProjectName
	{ $current=$iv_ruleProjectName.current.getText(); }
	EOF;

// Rule ProjectName
ruleProjectName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getProjectNameAccess().getCHAINEParserRuleCall());
	}
	this_CHAINE_0=ruleCHAINE
	{
		$current.merge(this_CHAINE_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleParticipants
entryRuleParticipants returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParticipantsRule()); }
	iv_ruleParticipants=ruleParticipants
	{ $current=$iv_ruleParticipants.current; }
	EOF;

// Rule Participants
ruleParticipants returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParticipantsAccess().getParticipantsAction_0(),
					$current);
			}
		)
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getParticipantsAccess().getLeftCurlyBracketKeyword_1_0());
			}
			otherlv_2='Participant:'
			{
				newLeafNode(otherlv_2, grammarAccess.getParticipantsAccess().getParticipantKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParticipantsAccess().getParticipantParticipantParserRuleCall_1_2_0());
					}
					lv_participant_3_0=ruleParticipant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParticipantsRule());
						}
						add(
							$current,
							"participant",
							lv_participant_3_0,
							"org.xtext.slr.ReliSRS.Participant");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4='Role:'
			{
				newLeafNode(otherlv_4, grammarAccess.getParticipantsAccess().getRoleKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParticipantsAccess().getRoleRoleParserRuleCall_1_4_0());
					}
					lv_role_5_0=ruleRole
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParticipantsRule());
						}
						add(
							$current,
							"role",
							lv_role_5_0,
							"org.xtext.slr.ReliSRS.Role");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getParticipantsAccess().getRightCurlyBracketKeyword_1_5());
			}
		)*
	)
;

// Entry rule entryRuleParticipant
entryRuleParticipant returns [String current=null]:
	{ newCompositeNode(grammarAccess.getParticipantRule()); }
	iv_ruleParticipant=ruleParticipant
	{ $current=$iv_ruleParticipant.current.getText(); }
	EOF;

// Rule Participant
ruleParticipant returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getParticipantAccess().getCHAINEParserRuleCall());
	}
	this_CHAINE_0=ruleCHAINE
	{
		$current.merge(this_CHAINE_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleRole
entryRuleRole returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRoleRule()); }
	iv_ruleRole=ruleRole
	{ $current=$iv_ruleRole.current.getText(); }
	EOF;

// Rule Role
ruleRole returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getRoleAccess().getCHAINEParserRuleCall());
	}
	this_CHAINE_0=ruleCHAINE
	{
		$current.merge(this_CHAINE_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleClassification
entryRuleClassification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassificationRule()); }
	iv_ruleClassification=ruleClassification
	{ $current=$iv_ruleClassification.current; }
	EOF;

// Rule Classification
ruleClassification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getClassificationAccess().getClassificationAction_0(),
					$current);
			}
		)
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getLeftCurlyBracketKeyword_1_0());
			}
			otherlv_2='question:'
			{
				newLeafNode(otherlv_2, grammarAccess.getClassificationAccess().getQuestionKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClassificationAccess().getQuestionQuestionParserRuleCall_1_2_0());
					}
					lv_question_3_0=ruleQuestion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassificationRule());
						}
						add(
							$current,
							"question",
							lv_question_3_0,
							"org.xtext.slr.ReliSRS.Question");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4='{'
				{
					newLeafNode(otherlv_4, grammarAccess.getClassificationAccess().getLeftCurlyBracketKeyword_1_3_0());
				}
				otherlv_5='response:'
				{
					newLeafNode(otherlv_5, grammarAccess.getClassificationAccess().getResponseKeyword_1_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassificationAccess().getResponseResponseParserRuleCall_1_3_2_0());
						}
						lv_response_6_0=ruleResponse
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassificationRule());
							}
							add(
								$current,
								"response",
								lv_response_6_0,
								"org.xtext.slr.ReliSRS.Response");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7='result:'
				{
					newLeafNode(otherlv_7, grammarAccess.getClassificationAccess().getResultKeyword_1_3_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassificationAccess().getResultatResultatParserRuleCall_1_3_4_0());
						}
						lv_resultat_8_0=ruleResultat
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassificationRule());
							}
							add(
								$current,
								"resultat",
								lv_resultat_8_0,
								"org.xtext.slr.ReliSRS.Resultat");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9='}'
				{
					newLeafNode(otherlv_9, grammarAccess.getClassificationAccess().getRightCurlyBracketKeyword_1_3_5());
				}
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getClassificationAccess().getRightCurlyBracketKeyword_1_4());
			}
		)*
	)
;

// Entry rule entryRuleQuestion
entryRuleQuestion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQuestionRule()); }
	iv_ruleQuestion=ruleQuestion
	{ $current=$iv_ruleQuestion.current.getText(); }
	EOF;

// Rule Question
ruleQuestion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getQuestionAccess().getCHAINEParserRuleCall());
	}
	this_CHAINE_0=ruleCHAINE
	{
		$current.merge(this_CHAINE_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleResponse
entryRuleResponse returns [String current=null]:
	{ newCompositeNode(grammarAccess.getResponseRule()); }
	iv_ruleResponse=ruleResponse
	{ $current=$iv_ruleResponse.current.getText(); }
	EOF;

// Rule Response
ruleResponse returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getResponseAccess().getCHAINEParserRuleCall());
	}
	this_CHAINE_0=ruleCHAINE
	{
		$current.merge(this_CHAINE_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleResultat
entryRuleResultat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getResultatRule()); }
	iv_ruleResultat=ruleResultat
	{ $current=$iv_ruleResultat.current.getText(); }
	EOF;

// Rule Resultat
ruleResultat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getResultatAccess().getENTIERParserRuleCall());
	}
	this_ENTIER_0=ruleENTIER
	{
		$current.merge(this_ENTIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePhases
entryRulePhases returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhasesRule()); }
	iv_rulePhases=rulePhases
	{ $current=$iv_rulePhases.current; }
	EOF;

// Rule Phases
rulePhases returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPhasesAccess().getPhasesAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPhasesAccess().getPhaseNamePhaseNameParserRuleCall_1_0_0());
					}
					lv_phaseName_1_0=rulePhaseName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhasesRule());
						}
						set(
							$current,
							"phaseName",
							lv_phaseName_1_0,
							"org.xtext.slr.ReliSRS.PhaseName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2='{'
				{
					newLeafNode(otherlv_2, grammarAccess.getPhasesAccess().getLeftCurlyBracketKeyword_1_1_0());
				}
				(
					otherlv_3='DecisionPerUser:'
					{
						newLeafNode(otherlv_3, grammarAccess.getPhasesAccess().getDecisionPerUserKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPhasesAccess().getDecisionPerUserDecisionPerUserParserRuleCall_1_1_1_1_0());
							}
							lv_decisionPerUser_4_0=ruleDecisionPerUser
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPhasesRule());
								}
								set(
									$current,
									"decisionPerUser",
									lv_decisionPerUser_4_0,
									"org.xtext.slr.ReliSRS.DecisionPerUser");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				(
					otherlv_5='StatisticsOnExclusionCriteria:'
					{
						newLeafNode(otherlv_5, grammarAccess.getPhasesAccess().getStatisticsOnExclusionCriteriaKeyword_1_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPhasesAccess().getStatisticsOnExclusionCriteriaStatisticsOnExclusionCriteriaParserRuleCall_1_1_2_1_0());
							}
							lv_statisticsOnExclusionCriteria_6_0=ruleStatisticsOnExclusionCriteria
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPhasesRule());
								}
								set(
									$current,
									"statisticsOnExclusionCriteria",
									lv_statisticsOnExclusionCriteria_6_0,
									"org.xtext.slr.ReliSRS.StatisticsOnExclusionCriteria");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				(
					otherlv_7='ConflictResolution:'
					{
						newLeafNode(otherlv_7, grammarAccess.getPhasesAccess().getConflictResolutionKeyword_1_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPhasesAccess().getConflictResolutionConflictResolutionParserRuleCall_1_1_3_1_0());
							}
							lv_conflictResolution_8_0=ruleConflictResolution
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPhasesRule());
								}
								set(
									$current,
									"conflictResolution",
									lv_conflictResolution_8_0,
									"org.xtext.slr.ReliSRS.ConflictResolution");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				(
					otherlv_9='Result:'
					{
						newLeafNode(otherlv_9, grammarAccess.getPhasesAccess().getResultKeyword_1_1_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPhasesAccess().getResultResultParserRuleCall_1_1_4_1_0());
							}
							lv_result_10_0=ruleResult
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPhasesRule());
								}
								set(
									$current,
									"result",
									lv_result_10_0,
									"org.xtext.slr.ReliSRS.Result");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				otherlv_11='}'
				{
					newLeafNode(otherlv_11, grammarAccess.getPhasesAccess().getRightCurlyBracketKeyword_1_1_5());
				}
			)
		)
	)
;

// Entry rule entryRulePhaseName
entryRulePhaseName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPhaseNameRule()); }
	iv_rulePhaseName=rulePhaseName
	{ $current=$iv_rulePhaseName.current.getText(); }
	EOF;

// Rule PhaseName
rulePhaseName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPhaseNameAccess().getCHAINEParserRuleCall());
	}
	this_CHAINE_0=ruleCHAINE
	{
		$current.merge(this_CHAINE_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleDecisionPerUser
entryRuleDecisionPerUser returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecisionPerUserRule()); }
	iv_ruleDecisionPerUser=ruleDecisionPerUser
	{ $current=$iv_ruleDecisionPerUser.current; }
	EOF;

// Rule DecisionPerUser
ruleDecisionPerUser returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDecisionPerUserAccess().getDecisionPerUserAction_0(),
					$current);
			}
		)
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getDecisionPerUserAccess().getLeftCurlyBracketKeyword_1_0());
			}
			otherlv_2='D_User:'
			{
				newLeafNode(otherlv_2, grammarAccess.getDecisionPerUserAccess().getD_UserKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionPerUserAccess().getDUserDUserParserRuleCall_1_2_0());
					}
					lv_dUser_3_0=ruleDUser
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionPerUserRule());
						}
						add(
							$current,
							"dUser",
							lv_dUser_3_0,
							"org.xtext.slr.ReliSRS.DUser");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4='D_Included:'
			{
				newLeafNode(otherlv_4, grammarAccess.getDecisionPerUserAccess().getD_IncludedKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionPerUserAccess().getDIncludedDIncludedParserRuleCall_1_4_0());
					}
					lv_dIncluded_5_0=ruleDIncluded
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionPerUserRule());
						}
						add(
							$current,
							"dIncluded",
							lv_dIncluded_5_0,
							"org.xtext.slr.ReliSRS.DIncluded");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='D_Excluded:'
			{
				newLeafNode(otherlv_6, grammarAccess.getDecisionPerUserAccess().getD_ExcludedKeyword_1_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionPerUserAccess().getDExcludedDExcludedParserRuleCall_1_6_0());
					}
					lv_dExcluded_7_0=ruleDExcluded
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionPerUserRule());
						}
						add(
							$current,
							"dExcluded",
							lv_dExcluded_7_0,
							"org.xtext.slr.ReliSRS.DExcluded");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_8='D_InConfclict:'
			{
				newLeafNode(otherlv_8, grammarAccess.getDecisionPerUserAccess().getD_InConfclictKeyword_1_7());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionPerUserAccess().getDInConflictDInConflictParserRuleCall_1_8_0());
					}
					lv_dInConflict_9_0=ruleDInConflict
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionPerUserRule());
						}
						add(
							$current,
							"dInConflict",
							lv_dInConflict_9_0,
							"org.xtext.slr.ReliSRS.DInConflict");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getDecisionPerUserAccess().getRightCurlyBracketKeyword_1_9());
			}
		)*
	)
;

// Entry rule entryRuleDUser
entryRuleDUser returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDUserRule()); }
	iv_ruleDUser=ruleDUser
	{ $current=$iv_ruleDUser.current.getText(); }
	EOF;

// Rule DUser
ruleDUser returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getDUserAccess().getCHAINEParserRuleCall());
	}
	this_CHAINE_0=ruleCHAINE
	{
		$current.merge(this_CHAINE_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleDIncluded
entryRuleDIncluded returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDIncludedRule()); }
	iv_ruleDIncluded=ruleDIncluded
	{ $current=$iv_ruleDIncluded.current.getText(); }
	EOF;

// Rule DIncluded
ruleDIncluded returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getDIncludedAccess().getENTIERParserRuleCall());
	}
	this_ENTIER_0=ruleENTIER
	{
		$current.merge(this_ENTIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleDExcluded
entryRuleDExcluded returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDExcludedRule()); }
	iv_ruleDExcluded=ruleDExcluded
	{ $current=$iv_ruleDExcluded.current.getText(); }
	EOF;

// Rule DExcluded
ruleDExcluded returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getDExcludedAccess().getENTIERParserRuleCall());
	}
	this_ENTIER_0=ruleENTIER
	{
		$current.merge(this_ENTIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleDInConflict
entryRuleDInConflict returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDInConflictRule()); }
	iv_ruleDInConflict=ruleDInConflict
	{ $current=$iv_ruleDInConflict.current.getText(); }
	EOF;

// Rule DInConflict
ruleDInConflict returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getDInConflictAccess().getENTIERParserRuleCall());
	}
	this_ENTIER_0=ruleENTIER
	{
		$current.merge(this_ENTIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleStatisticsOnExclusionCriteria
entryRuleStatisticsOnExclusionCriteria returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatisticsOnExclusionCriteriaRule()); }
	iv_ruleStatisticsOnExclusionCriteria=ruleStatisticsOnExclusionCriteria
	{ $current=$iv_ruleStatisticsOnExclusionCriteria.current; }
	EOF;

// Rule StatisticsOnExclusionCriteria
ruleStatisticsOnExclusionCriteria returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatisticsOnExclusionCriteriaAccess().getStatisticsOnExclusionCriteriaAction_0(),
					$current);
			}
		)
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getStatisticsOnExclusionCriteriaAccess().getLeftCurlyBracketKeyword_1_0());
			}
			otherlv_2='S_Criteria:'
			{
				newLeafNode(otherlv_2, grammarAccess.getStatisticsOnExclusionCriteriaAccess().getS_CriteriaKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatisticsOnExclusionCriteriaAccess().getSCriteriaSCriteriaParserRuleCall_1_2_0());
					}
					lv_sCriteria_3_0=ruleSCriteria
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatisticsOnExclusionCriteriaRule());
						}
						add(
							$current,
							"sCriteria",
							lv_sCriteria_3_0,
							"org.xtext.slr.ReliSRS.SCriteria");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4='S_Nombre:'
			{
				newLeafNode(otherlv_4, grammarAccess.getStatisticsOnExclusionCriteriaAccess().getS_NombreKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatisticsOnExclusionCriteriaAccess().getSNombreSNombreParserRuleCall_1_4_0());
					}
					lv_sNombre_5_0=ruleSNombre
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatisticsOnExclusionCriteriaRule());
						}
						add(
							$current,
							"sNombre",
							lv_sNombre_5_0,
							"org.xtext.slr.ReliSRS.SNombre");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='S_Pourcentage:'
			{
				newLeafNode(otherlv_6, grammarAccess.getStatisticsOnExclusionCriteriaAccess().getS_PourcentageKeyword_1_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatisticsOnExclusionCriteriaAccess().getSPourcentageSPourcentageParserRuleCall_1_6_0());
					}
					lv_sPourcentage_7_0=ruleSPourcentage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatisticsOnExclusionCriteriaRule());
						}
						add(
							$current,
							"sPourcentage",
							lv_sPourcentage_7_0,
							"org.xtext.slr.ReliSRS.SPourcentage");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getStatisticsOnExclusionCriteriaAccess().getRightCurlyBracketKeyword_1_7());
			}
		)*
	)
;

// Entry rule entryRuleSCriteria
entryRuleSCriteria returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSCriteriaRule()); }
	iv_ruleSCriteria=ruleSCriteria
	{ $current=$iv_ruleSCriteria.current.getText(); }
	EOF;

// Rule SCriteria
ruleSCriteria returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSCriteriaAccess().getCHAINEParserRuleCall());
	}
	this_CHAINE_0=ruleCHAINE
	{
		$current.merge(this_CHAINE_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSNombre
entryRuleSNombre returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSNombreRule()); }
	iv_ruleSNombre=ruleSNombre
	{ $current=$iv_ruleSNombre.current.getText(); }
	EOF;

// Rule SNombre
ruleSNombre returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSNombreAccess().getENTIERParserRuleCall());
	}
	this_ENTIER_0=ruleENTIER
	{
		$current.merge(this_ENTIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSPourcentage
entryRuleSPourcentage returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSPourcentageRule()); }
	iv_ruleSPourcentage=ruleSPourcentage
	{ $current=$iv_ruleSPourcentage.current.getText(); }
	EOF;

// Rule SPourcentage
ruleSPourcentage returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_INT_0=RULE_INT
			{
				$current.merge(this_INT_0);
			}
			{
				newLeafNode(this_INT_0, grammarAccess.getSPourcentageAccess().getINTTerminalRuleCall_0());
			}
		)*
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSPourcentageAccess().getFullStopKeyword_1());
		}
		(
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getSPourcentageAccess().getINTTerminalRuleCall_2());
			}
		)*
	)
;

// Entry rule entryRuleConflictResolution
entryRuleConflictResolution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConflictResolutionRule()); }
	iv_ruleConflictResolution=ruleConflictResolution
	{ $current=$iv_ruleConflictResolution.current; }
	EOF;

// Rule ConflictResolution
ruleConflictResolution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConflictResolutionAccess().getConflictResolutionAction_0(),
					$current);
			}
		)
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getConflictResolutionAccess().getLeftCurlyBracketKeyword_1_0());
			}
			otherlv_2='C_Decision:'
			{
				newLeafNode(otherlv_2, grammarAccess.getConflictResolutionAccess().getC_DecisionKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConflictResolutionAccess().getCDecisionCDecisionEnumRuleCall_1_2_0());
					}
					lv_cDecision_3_0=ruleCDecision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConflictResolutionRule());
						}
						add(
							$current,
							"cDecision",
							lv_cDecision_3_0,
							"org.xtext.slr.ReliSRS.CDecision");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4='C_Nombre:'
			{
				newLeafNode(otherlv_4, grammarAccess.getConflictResolutionAccess().getC_NombreKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConflictResolutionAccess().getCNombreCNombreParserRuleCall_1_4_0());
					}
					lv_cNombre_5_0=ruleCNombre
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConflictResolutionRule());
						}
						add(
							$current,
							"cNombre",
							lv_cNombre_5_0,
							"org.xtext.slr.ReliSRS.CNombre");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getConflictResolutionAccess().getRightCurlyBracketKeyword_1_5());
			}
		)*
	)
;

// Entry rule entryRuleCNombre
entryRuleCNombre returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCNombreRule()); }
	iv_ruleCNombre=ruleCNombre
	{ $current=$iv_ruleCNombre.current.getText(); }
	EOF;

// Rule CNombre
ruleCNombre returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getCNombreAccess().getENTIERParserRuleCall());
	}
	this_ENTIER_0=ruleENTIER
	{
		$current.merge(this_ENTIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleResult
entryRuleResult returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResultRule()); }
	iv_ruleResult=ruleResult
	{ $current=$iv_ruleResult.current; }
	EOF;

// Rule Result
ruleResult returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getResultAccess().getResultAction_0(),
					$current);
			}
		)
		otherlv_1='R_Total:'
		{
			newLeafNode(otherlv_1, grammarAccess.getResultAccess().getR_TotalKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResultAccess().getRTotalRTotalParserRuleCall_2_0());
				}
				lv_rTotal_2_0=ruleRTotal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResultRule());
					}
					set(
						$current,
						"rTotal",
						lv_rTotal_2_0,
						"org.xtext.slr.ReliSRS.RTotal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getResultAccess().getLeftCurlyBracketKeyword_3_0());
			}
			otherlv_4='R_Decision:'
			{
				newLeafNode(otherlv_4, grammarAccess.getResultAccess().getR_DecisionKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getResultAccess().getRDecisionRDecisionEnumRuleCall_3_2_0());
					}
					lv_rDecision_5_0=ruleRDecision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getResultRule());
						}
						add(
							$current,
							"rDecision",
							lv_rDecision_5_0,
							"org.xtext.slr.ReliSRS.RDecision");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='R_Paper:'
			{
				newLeafNode(otherlv_6, grammarAccess.getResultAccess().getR_PaperKeyword_3_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getResultAccess().getRPaperRPaperParserRuleCall_3_4_0());
					}
					lv_rPaper_7_0=ruleRPaper
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getResultRule());
						}
						add(
							$current,
							"rPaper",
							lv_rPaper_7_0,
							"org.xtext.slr.ReliSRS.RPaper");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_8='R_Pourcentage:'
			{
				newLeafNode(otherlv_8, grammarAccess.getResultAccess().getR_PourcentageKeyword_3_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getResultAccess().getRPourcentageRPourcentageParserRuleCall_3_6_0());
					}
					lv_rPourcentage_9_0=ruleRPourcentage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getResultRule());
						}
						add(
							$current,
							"rPourcentage",
							lv_rPourcentage_9_0,
							"org.xtext.slr.ReliSRS.RPourcentage");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getResultAccess().getRightCurlyBracketKeyword_3_7());
			}
		)*
	)
;

// Entry rule entryRuleRTotal
entryRuleRTotal returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRTotalRule()); }
	iv_ruleRTotal=ruleRTotal
	{ $current=$iv_ruleRTotal.current.getText(); }
	EOF;

// Rule RTotal
ruleRTotal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getRTotalAccess().getENTIERParserRuleCall());
	}
	this_ENTIER_0=ruleENTIER
	{
		$current.merge(this_ENTIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleRPaper
entryRuleRPaper returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRPaperRule()); }
	iv_ruleRPaper=ruleRPaper
	{ $current=$iv_ruleRPaper.current.getText(); }
	EOF;

// Rule RPaper
ruleRPaper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getRPaperAccess().getENTIERParserRuleCall());
	}
	this_ENTIER_0=ruleENTIER
	{
		$current.merge(this_ENTIER_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleRPourcentage
entryRuleRPourcentage returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRPourcentageRule()); }
	iv_ruleRPourcentage=ruleRPourcentage
	{ $current=$iv_ruleRPourcentage.current.getText(); }
	EOF;

// Rule RPourcentage
ruleRPourcentage returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_INT_0=RULE_INT
			{
				$current.merge(this_INT_0);
			}
			{
				newLeafNode(this_INT_0, grammarAccess.getRPourcentageAccess().getINTTerminalRuleCall_0());
			}
		)*
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRPourcentageAccess().getFullStopKeyword_1());
		}
		(
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getRPourcentageAccess().getINTTerminalRuleCall_2());
			}
		)*
	)
;

// Entry rule entryRuleENTIER
entryRuleENTIER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getENTIERRule()); }
	iv_ruleENTIER=ruleENTIER
	{ $current=$iv_ruleENTIER.current.getText(); }
	EOF;

// Rule ENTIER
ruleENTIER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getENTIERAccess().getINTTerminalRuleCall());
		}
	)+
;

// Entry rule entryRuleCHAINE
entryRuleCHAINE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCHAINERule()); }
	iv_ruleCHAINE=ruleCHAINE
	{ $current=$iv_ruleCHAINE.current.getText(); }
	EOF;

// Rule CHAINE
ruleCHAINE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getCHAINEAccess().getIDTerminalRuleCall());
		}
	)+
;

// Rule CDecision
ruleCDecision returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Resolved included'
			{
				$current = grammarAccess.getCDecisionAccess().getCresolvedIncludedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCDecisionAccess().getCresolvedIncludedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Resolved excluded'
			{
				$current = grammarAccess.getCDecisionAccess().getCresolvedExcludedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCDecisionAccess().getCresolvedExcludedEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Pending conflicts'
			{
				$current = grammarAccess.getCDecisionAccess().getCpendingConflictEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCDecisionAccess().getCpendingConflictEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule RDecision
ruleRDecision returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Included'
			{
				$current = grammarAccess.getRDecisionAccess().getRIncludedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRDecisionAccess().getRIncludedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Excluded'
			{
				$current = grammarAccess.getRDecisionAccess().getRExcludedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRDecisionAccess().getRExcludedEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='In conflict'
			{
				$current = grammarAccess.getRDecisionAccess().getRInConflictEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRDecisionAccess().getRInConflictEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='In review'
			{
				$current = grammarAccess.getRDecisionAccess().getRInReviewEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRDecisionAccess().getRInReviewEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Pending'
			{
				$current = grammarAccess.getRDecisionAccess().getRPendingEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRDecisionAccess().getRPendingEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
