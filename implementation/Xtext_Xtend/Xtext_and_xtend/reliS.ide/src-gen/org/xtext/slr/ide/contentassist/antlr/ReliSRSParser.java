/*
 * generated by Xtext 2.14.0
 */
package org.xtext.slr.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.slr.ide.contentassist.antlr.internal.InternalReliSRSParser;
import org.xtext.slr.services.ReliSRSGrammarAccess;

public class ReliSRSParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(ReliSRSGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, ReliSRSGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getCDecisionAccess().getAlternatives(), "rule__CDecision__Alternatives");
			builder.put(grammarAccess.getRDecisionAccess().getAlternatives(), "rule__RDecision__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getModelAccess().getGroup_2(), "rule__Model__Group_2__0");
			builder.put(grammarAccess.getModelAccess().getGroup_3(), "rule__Model__Group_3__0");
			builder.put(grammarAccess.getModelAccess().getGroup_4(), "rule__Model__Group_4__0");
			builder.put(grammarAccess.getParticipantsAccess().getGroup(), "rule__Participants__Group__0");
			builder.put(grammarAccess.getParticipantsAccess().getGroup_1(), "rule__Participants__Group_1__0");
			builder.put(grammarAccess.getClassificationAccess().getGroup(), "rule__Classification__Group__0");
			builder.put(grammarAccess.getClassificationAccess().getGroup_1(), "rule__Classification__Group_1__0");
			builder.put(grammarAccess.getClassificationAccess().getGroup_1_3(), "rule__Classification__Group_1_3__0");
			builder.put(grammarAccess.getPhasesAccess().getGroup(), "rule__Phases__Group__0");
			builder.put(grammarAccess.getPhasesAccess().getGroup_1(), "rule__Phases__Group_1__0");
			builder.put(grammarAccess.getPhasesAccess().getGroup_1_1(), "rule__Phases__Group_1_1__0");
			builder.put(grammarAccess.getPhasesAccess().getGroup_1_1_1(), "rule__Phases__Group_1_1_1__0");
			builder.put(grammarAccess.getPhasesAccess().getGroup_1_1_2(), "rule__Phases__Group_1_1_2__0");
			builder.put(grammarAccess.getPhasesAccess().getGroup_1_1_3(), "rule__Phases__Group_1_1_3__0");
			builder.put(grammarAccess.getPhasesAccess().getGroup_1_1_4(), "rule__Phases__Group_1_1_4__0");
			builder.put(grammarAccess.getDecisionPerUserAccess().getGroup(), "rule__DecisionPerUser__Group__0");
			builder.put(grammarAccess.getDecisionPerUserAccess().getGroup_1(), "rule__DecisionPerUser__Group_1__0");
			builder.put(grammarAccess.getStatisticsOnExclusionCriteriaAccess().getGroup(), "rule__StatisticsOnExclusionCriteria__Group__0");
			builder.put(grammarAccess.getStatisticsOnExclusionCriteriaAccess().getGroup_1(), "rule__StatisticsOnExclusionCriteria__Group_1__0");
			builder.put(grammarAccess.getSPourcentageAccess().getGroup(), "rule__SPourcentage__Group__0");
			builder.put(grammarAccess.getConflictResolutionAccess().getGroup(), "rule__ConflictResolution__Group__0");
			builder.put(grammarAccess.getConflictResolutionAccess().getGroup_1(), "rule__ConflictResolution__Group_1__0");
			builder.put(grammarAccess.getResultAccess().getGroup(), "rule__Result__Group__0");
			builder.put(grammarAccess.getResultAccess().getGroup_3(), "rule__Result__Group_3__0");
			builder.put(grammarAccess.getRPourcentageAccess().getGroup(), "rule__RPourcentage__Group__0");
			builder.put(grammarAccess.getModelAccess().getProjectNameAssignment_1(), "rule__Model__ProjectNameAssignment_1");
			builder.put(grammarAccess.getModelAccess().getParticipantsAssignment_2_1(), "rule__Model__ParticipantsAssignment_2_1");
			builder.put(grammarAccess.getModelAccess().getPhaseAssignment_3_1(), "rule__Model__PhaseAssignment_3_1");
			builder.put(grammarAccess.getModelAccess().getClassificationAssignment_4_1(), "rule__Model__ClassificationAssignment_4_1");
			builder.put(grammarAccess.getParticipantsAccess().getParticipantAssignment_1_2(), "rule__Participants__ParticipantAssignment_1_2");
			builder.put(grammarAccess.getParticipantsAccess().getRoleAssignment_1_4(), "rule__Participants__RoleAssignment_1_4");
			builder.put(grammarAccess.getClassificationAccess().getQuestionAssignment_1_2(), "rule__Classification__QuestionAssignment_1_2");
			builder.put(grammarAccess.getClassificationAccess().getResponseAssignment_1_3_2(), "rule__Classification__ResponseAssignment_1_3_2");
			builder.put(grammarAccess.getClassificationAccess().getResultatAssignment_1_3_4(), "rule__Classification__ResultatAssignment_1_3_4");
			builder.put(grammarAccess.getPhasesAccess().getPhaseNameAssignment_1_0(), "rule__Phases__PhaseNameAssignment_1_0");
			builder.put(grammarAccess.getPhasesAccess().getDecisionPerUserAssignment_1_1_1_1(), "rule__Phases__DecisionPerUserAssignment_1_1_1_1");
			builder.put(grammarAccess.getPhasesAccess().getStatisticsOnExclusionCriteriaAssignment_1_1_2_1(), "rule__Phases__StatisticsOnExclusionCriteriaAssignment_1_1_2_1");
			builder.put(grammarAccess.getPhasesAccess().getConflictResolutionAssignment_1_1_3_1(), "rule__Phases__ConflictResolutionAssignment_1_1_3_1");
			builder.put(grammarAccess.getPhasesAccess().getResultAssignment_1_1_4_1(), "rule__Phases__ResultAssignment_1_1_4_1");
			builder.put(grammarAccess.getDecisionPerUserAccess().getDUserAssignment_1_2(), "rule__DecisionPerUser__DUserAssignment_1_2");
			builder.put(grammarAccess.getDecisionPerUserAccess().getDIncludedAssignment_1_4(), "rule__DecisionPerUser__DIncludedAssignment_1_4");
			builder.put(grammarAccess.getDecisionPerUserAccess().getDExcludedAssignment_1_6(), "rule__DecisionPerUser__DExcludedAssignment_1_6");
			builder.put(grammarAccess.getDecisionPerUserAccess().getDInConflictAssignment_1_8(), "rule__DecisionPerUser__DInConflictAssignment_1_8");
			builder.put(grammarAccess.getStatisticsOnExclusionCriteriaAccess().getSCriteriaAssignment_1_2(), "rule__StatisticsOnExclusionCriteria__SCriteriaAssignment_1_2");
			builder.put(grammarAccess.getStatisticsOnExclusionCriteriaAccess().getSNombreAssignment_1_4(), "rule__StatisticsOnExclusionCriteria__SNombreAssignment_1_4");
			builder.put(grammarAccess.getStatisticsOnExclusionCriteriaAccess().getSPourcentageAssignment_1_6(), "rule__StatisticsOnExclusionCriteria__SPourcentageAssignment_1_6");
			builder.put(grammarAccess.getConflictResolutionAccess().getCDecisionAssignment_1_2(), "rule__ConflictResolution__CDecisionAssignment_1_2");
			builder.put(grammarAccess.getConflictResolutionAccess().getCNombreAssignment_1_4(), "rule__ConflictResolution__CNombreAssignment_1_4");
			builder.put(grammarAccess.getResultAccess().getRTotalAssignment_2(), "rule__Result__RTotalAssignment_2");
			builder.put(grammarAccess.getResultAccess().getRDecisionAssignment_3_2(), "rule__Result__RDecisionAssignment_3_2");
			builder.put(grammarAccess.getResultAccess().getRPaperAssignment_3_4(), "rule__Result__RPaperAssignment_3_4");
			builder.put(grammarAccess.getResultAccess().getRPourcentageAssignment_3_6(), "rule__Result__RPourcentageAssignment_3_6");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private ReliSRSGrammarAccess grammarAccess;

	@Override
	protected InternalReliSRSParser createParser() {
		InternalReliSRSParser result = new InternalReliSRSParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ReliSRSGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ReliSRSGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
